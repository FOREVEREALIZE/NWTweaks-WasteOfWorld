buildscript {
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = '1.0'
group = 'com.newwind.nwtweaks' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'nwtweaks'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // official   MCVersion             Official field/method names from Mojang mapping files
    // parchment  YYYY.MM.DD-MCVersion  Open community-sourced parameter names and javadocs layered on top of official
    //
    // You must be aware of the Mojang license when using the 'official' or 'parchment' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Parchment is an unofficial project maintained by ParchmentMC, separate from MinecraftForge
    // Additional setup is needed to use their mappings: https://github.com/ParchmentMC/Parchment/wiki/Getting-Started
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: '1.19.2'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'examplemod'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'examplemod'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

    maven { url "https://www.cursemaven.com" }

    flatDir {
        dirs 'libs'
    }

}

dependencies {

    minecraft 'net.minecraftforge:forge:1.19.2-43.2.13'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("curse.maven:feathers-699933:4546292")
    implementation fg.deobf("curse.maven:unionlib-367806:4547568")
    implementation fg.deobf("curse.maven:survive-367337:4552172")
    implementation fg.deobf("curse.maven:tinyinv-455299:4401235")
    implementation fg.deobf("com.ccr4ft3r.actionsofstamina:actions-of-stamina-1.19.2:0.5.0")
    implementation fg.deobf("curse.maven:compact-machines-224218:3907274")
    implementation fg.deobf("curse.maven:framework-549225:4287474")
    implementation fg.deobf("curse.maven:mrcrayfishs-gun-mod-289479:4390782")
    implementation fg.deobf("curse.maven:cloth-config-348521:3972423")
    implementation fg.deobf("curse.maven:playeranimator-658587:4418149")
    implementation fg.deobf("curse.maven:better-combat-by-daedelus-639842:4534619")
    implementation fg.deobf("curse.maven:hitmarker-reforged-689192:4034599")
    implementation fg.deobf("curse.maven:curios-309927:4523009")
    implementation fg.deobf("curse.maven:backpacked-352835:4480724")
    implementation fg.deobf("curse.maven:kiwi-303657:4451128")
    implementation fg.deobf("curse.maven:snow-real-magic-308663:4454932")
    implementation fg.deobf("curse.maven:mutil-351914:3941314")
    implementation fg.deobf("curse.maven:tetra-289712:4487237")
    implementation fg.deobf("curse.maven:the-lost-cities-269024:4554187")

    runtimeOnly fg.deobf("curse.maven:configured-457570:4462837")
    runtimeOnly fg.deobf("curse.maven:parcool-482378:4513003")
    runtimeOnly fg.deobf("curse.maven:reforgium-853424:4505759")
    runtimeOnly fg.deobf("curse.maven:connectedness-853916:4506203")

    runtimeOnly fg.deobf("curse.maven:spark-361579:4505309")
}

mixin {

    add sourceSets.main, 'mixins.nwtweaks.refmap.json'
    config 'mixins.nwtweaks.json'

}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "nwtweaks",
                "Specification-Vendor"    : "newwind",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "newwind",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
